00000000000i[     ] Bochs x86 Emulator 2.4.5
00000000000i[     ]   Build from CVS snapshot, on April 25, 2010
00000000000i[     ] System configuration
00000000000i[     ]   processors: 1 (cores=1, HT threads=1)
00000000000i[     ]   A20 line support: yes
00000000000i[     ] CPU configuration
00000000000i[     ]   level: 6
00000000000i[     ]   SMP support: no
00000000000i[     ]   APIC support: yes
00000000000i[     ]   FPU support: yes
00000000000i[     ]   MMX support: yes
00000000000i[     ]   3dnow! support: no
00000000000i[     ]   SEP support: yes
00000000000i[     ]   SSE support: sse2
00000000000i[     ]   XSAVE support: no
00000000000i[     ]   AES support: no
00000000000i[     ]   MOVBE support: no
00000000000i[     ]   x86-64 support: yes
00000000000i[     ]   1G paging support: no
00000000000i[     ]   MWAIT support: no
00000000000i[     ]   VMX support: no
00000000000i[     ] Optimization configuration
00000000000i[     ]   RepeatSpeedups support: yes
00000000000i[     ]   Trace cache support: yes
00000000000i[     ]   Fast function calls: yes
00000000000i[     ] Devices configuration
00000000000i[     ]   ACPI support: yes
00000000000i[     ]   NE2000 support: yes
00000000000i[     ]   PCI support: yes, enabled=yes
00000000000i[     ]   SB16 support: yes
00000000000i[     ]   USB support: yes
00000000000i[     ]   VGA extension support: vbe cirrus
00000000000i[MEM0 ] allocated memory at 036FC020. after alignment, vector=036FD000
00000000000i[MEM0 ] 32.00MB
00000000000i[MEM0 ] mem block size = 0x00100000, blocks=32
00000000000i[MEM0 ] rom at 0xfffe0000/131072 ('E:\homwwork\DevelopTools\env\Bochs-2.4.5\BIOS-bochs-latest')
00000000000i[MEM0 ] rom at 0xc0000/40448 ('E:\homwwork\DevelopTools\env\Bochs-2.4.5\VGABIOS-lgpl-latest')
00000000000i[CMOS ] Using local time for initial clock
00000000000i[CMOS ] Setting initial clock to: Fri Jan 06 21:19:09 2023 (time0=1673011149)
00000000000i[DMA  ] channel 4 used by cascade
00000000000i[DMA  ] channel 2 used by Floppy Drive
00000000000i[PCI  ] 440FX Host bridge present at device 0, function 0
00000000000i[PCI  ] PIIX3 PCI-to-ISA bridge present at device 1, function 0
00000000000i[MEM0 ] Register memory access handlers: 0x000a0000 - 0x000bffff
00000000000i[WGUI ] Desktop Window dimensions: 1920 x 1080
00000000000i[WGUI ] Number of Mouse Buttons = 3
00000000000i[WGUI ] IME disabled
00000000000i[KMAP ] Loading keymap from 'E:\homwwork\DevelopTools\env\Bochs-2.4.5\keymaps\x11-pc-us.map'
00000000000i[KMAP ] Loaded 168 symbols
00000000000i[MEM0 ] Register memory access handlers: 0xe0000000 - 0xe0ffffff
00000000000i[CLVGA] VBE Bochs Display Extension Enabled
00000000000i[CLVGA] interval=50000
00000000000i[     ] init_dev of 'unmapped' plugin device by virtual method
00000000000i[     ] init_dev of 'biosdev' plugin device by virtual method
00000000000i[     ] init_dev of 'speaker' plugin device by virtual method
00000000000i[     ] init_dev of 'extfpuirq' plugin device by virtual method
00000000000i[     ] init_dev of 'gameport' plugin device by virtual method
00000000000i[     ] init_dev of 'iodebug' plugin device by virtual method
00000000000i[     ] init_dev of 'pci_ide' plugin device by virtual method
00000000000i[PCI  ] PIIX3 PCI IDE controller present at device 1, function 1
00000000000i[     ] init_dev of 'acpi' plugin device by virtual method
00000000000i[PCI  ] ACPI Controller present at device 1, function 3
00000000000i[     ] init_dev of 'ioapic' plugin device by virtual method
00000000000i[IOAP ] initializing I/O APIC
00000000000i[MEM0 ] Register memory access handlers: 0xfec00000 - 0xfec00fff
00000000000i[     ] init_dev of 'keyboard' plugin device by virtual method
00000000000i[KBD  ] will paste characters every 1000 keyboard ticks
00000000000i[     ] init_dev of 'harddrv' plugin device by virtual method
00000000000i[HD   ] HD on ata0-0: 'E:\homwwork\\DevelopTools\\env\\Project\\src\\myOS\\img\\myOS.img' 'flat' mode 
00000000000i[HD   ] translation on ata0-0 set to 'none'
00000000000i[HD   ] Using boot sequence disk, none, none
00000000000i[HD   ] Floppy boot signature check is enabled
00000000000i[     ] init_dev of 'serial' plugin device by virtual method
00000000000i[SER  ] com1 at 0x03f8 irq 4
00000000000i[     ] init_dev of 'parallel' plugin device by virtual method
00000000000i[PAR  ] parallel port 1 at 0x0378 irq 7
00000000000i[     ] register state of 'unmapped' plugin device by virtual method
00000000000i[     ] register state of 'biosdev' plugin device by virtual method
00000000000i[     ] register state of 'speaker' plugin device by virtual method
00000000000i[     ] register state of 'extfpuirq' plugin device by virtual method
00000000000i[     ] register state of 'gameport' plugin device by virtual method
00000000000i[     ] register state of 'iodebug' plugin device by virtual method
00000000000i[     ] register state of 'pci_ide' plugin device by virtual method
00000000000i[     ] register state of 'acpi' plugin device by virtual method
00000000000i[     ] register state of 'ioapic' plugin device by virtual method
00000000000i[     ] register state of 'keyboard' plugin device by virtual method
00000000000i[     ] register state of 'harddrv' plugin device by virtual method
00000000000i[     ] register state of 'serial' plugin device by virtual method
00000000000i[     ] register state of 'parallel' plugin device by virtual method
00000000000i[SYS  ] bx_pc_system_c::Reset(HARDWARE) called
00000000000i[CPU0 ] cpu hardware reset
00000000000i[APIC0] allocate APIC id=0 (MMIO enabled) to 0xfee00000
00000000000i[CPU0 ] CPUID[0x00000000]: 00000003 756e6547 6c65746e 49656e69
00000000000i[CPU0 ] CPUID[0x00000001]: 00000f20 00000800 00002000 078bfbff
00000000000i[CPU0 ] CPUID[0x00000002]: 00410601 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x80000000]: 80000008 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x80000001]: 00000000 00000000 00000101 2a100800
00000000000i[CPU0 ] CPUID[0x80000002]: 20202020 20202020 20202020 6e492020
00000000000i[CPU0 ] CPUID[0x80000003]: 286c6574 50202952 69746e65 52286d75
00000000000i[CPU0 ] CPUID[0x80000004]: 20342029 20555043 20202020 00202020
00000000000i[CPU0 ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00000000000i[CPU0 ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00000000000i[CPU0 ] CPUID[0x80000008]: 00003020 00000000 00000000 00000000
00000000000i[     ] reset of 'unmapped' plugin device by virtual method
00000000000i[     ] reset of 'biosdev' plugin device by virtual method
00000000000i[     ] reset of 'speaker' plugin device by virtual method
00000000000i[     ] reset of 'extfpuirq' plugin device by virtual method
00000000000i[     ] reset of 'gameport' plugin device by virtual method
00000000000i[     ] reset of 'iodebug' plugin device by virtual method
00000000000i[     ] reset of 'pci_ide' plugin device by virtual method
00000000000i[     ] reset of 'acpi' plugin device by virtual method
00000000000i[     ] reset of 'ioapic' plugin device by virtual method
00000000000i[     ] reset of 'keyboard' plugin device by virtual method
00000000000i[     ] reset of 'harddrv' plugin device by virtual method
00000000000i[     ] reset of 'serial' plugin device by virtual method
00000000000i[     ] reset of 'parallel' plugin device by virtual method
00000000000i[     ] set SIGINT handler to bx_debug_ctrlc_handler
00000003305i[BIOS ] $Revision: 1.247 $ $Date: 2010/04/04 19:33:50 $
00000200000i[WGUI ] dimension update x=720 y=400 fontheight=16 fontwidth=9 bpp=8
00000318057i[KBD  ] reset-disable command received
00000444815i[VBIOS] VGABios $Id: vgabios.c,v 1.69 2009/04/07 18:18:20 vruppert Exp $
00000444886i[CLVGA] VBE known Display Interface b0c0
00000444918i[CLVGA] VBE known Display Interface b0c5
00000447843i[VBIOS] VBE Bios $Id: vbe.c,v 1.62 2009/01/25 15:46:25 vruppert Exp $
00000760532i[BIOS ] Starting rombios32
00000761029i[BIOS ] Shutdown flag 0
00000761710i[BIOS ] ram_size=0x02000000
00000762188i[BIOS ] ram_end=32MB
00000802748i[BIOS ] Found 1 cpu(s)
00000822017i[BIOS ] bios_table_addr: 0x000fbc18 end=0x000fcc00
00000822120i[PCI  ] 440FX PMC write to PAM register 59 (TLB Flush)
00001149817i[PCI  ] 440FX PMC write to PAM register 59 (TLB Flush)
00001477745i[P2I  ] PCI IRQ routing: PIRQA# set to 0x0b
00001477766i[P2I  ] PCI IRQ routing: PIRQB# set to 0x09
00001477787i[P2I  ] PCI IRQ routing: PIRQC# set to 0x0b
00001477808i[P2I  ] PCI IRQ routing: PIRQD# set to 0x09
00001477818i[P2I  ] write: ELCR2 = 0x0a
00001478703i[BIOS ] PIIX3/PIIX4 init: elcr=00 0a
00001486661i[BIOS ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00001489223i[BIOS ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00001491624i[BIOS ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00001491854i[PIDE ] new BM-DMA address: 0xc000
00001492558i[BIOS ] region 4: 0x0000c000
00001494868i[BIOS ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00001495106i[ACPI ] new irq line = 11
00001495120i[ACPI ] new irq line = 9
00001495150i[ACPI ] new PM base address: 0xb000
00001495164i[ACPI ] new SM base address: 0xb100
00001495192i[PCI  ] setting SMRAM control register to 0x4a
00001659286i[CPU0 ] Enter to System Management Mode
00001659296i[CPU0 ] RSM: Resuming from System Management Mode
00001823316i[PCI  ] setting SMRAM control register to 0x0a
00001832487i[BIOS ] MP table addr=0x000fbcf0 MPC table addr=0x000fbc20 size=0xd0
00001834546i[BIOS ] SMBIOS table addr=0x000fbd00
00001836934i[BIOS ] ACPI tables: RSDP addr=0x000fbe20 ACPI DATA addr=0x01ff0000 size=0x988
00001840172i[BIOS ] Firmware waking vector 0x1ff00cc
00001851285i[PCI  ] 440FX PMC write to PAM register 59 (TLB Flush)
00001852129i[BIOS ] bios_table_cur_addr: 0x000fbe44
00001864596i[BIOS ] ata0-0: PCHS=121/16/63 translation=none LCHS=121/16/63
00005745094i[BIOS ] IDE time out
00017825013i[BIOS ] Booting from 0000:7c00
00018333285e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018741705e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018800422e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018859139e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018917856e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00018976573e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019035290e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019094007e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019152724e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019211441e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00019760681e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020169101e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020577521e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00020985941e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021044658e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021103375e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021162092e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021220809e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021279526e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021338243e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021396960e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021455677e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021514394e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021573111e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021631828e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021690545e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021749262e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021807979e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021866696e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021925413e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00021984130e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022042847e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022101564e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022160281e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022218998e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022277715e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022336432e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022395149e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022453866e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022512583e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022571300e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022630017e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022688734e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022747451e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022806168e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022864885e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022923602e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00022982319e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023041036e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023099753e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00023648993e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024057413e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024465833e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024874253e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024932970e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00024991687e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025050404e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025109121e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025167838e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025226555e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025285272e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025343989e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025402706e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025461423e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025520140e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025578857e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025637574e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025696291e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025755008e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025813725e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025872442e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025931159e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00025989876e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026048593e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026107310e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026166027e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026224744e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026283461e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026342178e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026400895e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026459612e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026518329e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026577046e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026635763e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026694480e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026753197e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026811914e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026870631e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026929348e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00026988065e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00027537305e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00027945725e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028354145e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028762565e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028821282e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028879999e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028938716e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00028997433e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029056150e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029114867e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029173584e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029232301e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029291018e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029349735e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029408452e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029467169e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029525886e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029584603e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029643320e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029702037e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029760754e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029819471e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029878188e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029936905e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00029995622e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030054339e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030113056e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030171773e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030230490e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030289207e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030347924e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030406641e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030465358e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030524075e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030582792e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030641509e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030700226e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030758943e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030817660e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00030876377e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00031425617e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00031834037e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032242457e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032650877e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032709594e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032768311e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032827028e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032885745e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00032944462e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033003179e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033061896e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033120613e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033179330e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033238047e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033296764e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033355481e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033414198e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033472915e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033531632e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033590349e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033649066e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033707783e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033766500e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033825217e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033883934e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00033942651e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034001368e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034060085e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034118802e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034177519e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034236236e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034294953e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034353670e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034412387e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034471104e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034529821e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034588538e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034647255e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034705972e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00034764689e[CPU0 ] interrupt(): vector must be within IDT table limits, IDT.limit = 0x107
00035248000p[WGUI ] >>PANIC<< POWER button turned off.
00035248000i[CPU0 ] CPU is in protected mode (active)
00035248000i[CPU0 ] CS.d_b = 32 bit
00035248000i[CPU0 ] SS.d_b = 32 bit
00035248000i[CPU0 ] EFER   = 0x00000000
00035248000i[CPU0 ] | RAX=0000000000000018  RBX=0000000000000f26
00035248000i[CPU0 ] | RCX=000000000000003e  RDX=0000000000000011
00035248000i[CPU0 ] | RSP=00000000c009ef5c  RBP=00000000c009efa8
00035248000i[CPU0 ] | RSI=00000000c00b8fa0  RDI=00000000c00b8f00
00035248000i[CPU0 ] |  R8=0000000000000000   R9=0000000000000000
00035248000i[CPU0 ] | R10=0000000000000000  R11=0000000000000000
00035248000i[CPU0 ] | R12=0000000000000000  R13=0000000000000000
00035248000i[CPU0 ] | R14=0000000000000000  R15=0000000000000000
00035248000i[CPU0 ] | IOPL=0 id vip vif ac vm rf nt of df if tf sf zf af pf cf
00035248000i[CPU0 ] | SEG selector     base    limit G D
00035248000i[CPU0 ] | SEG sltr(index|ti|rpl)     base    limit G D
00035248000i[CPU0 ] |  CS:0008( 0001| 0|  0) 00000000 ffffffff 1 1
00035248000i[CPU0 ] |  DS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00035248000i[CPU0 ] |  SS:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00035248000i[CPU0 ] |  ES:0010( 0002| 0|  0) 00000000 ffffffff 1 1
00035248000i[CPU0 ] |  FS:0000( 0000| 0|  0) 00000000 00000000 0 0
00035248000i[CPU0 ] |  GS:0018( 0003| 0|  0) c00b8000 00007fff 1 1
00035248000i[CPU0 ] |  MSR_FS_BASE:0000000000000000
00035248000i[CPU0 ] |  MSR_GS_BASE:00000000c00b8000
00035248000i[CPU0 ] | RIP=00000000c0001aaa (00000000c0001aaa)
00035248000i[CPU0 ] | CR0=0xe0000011 CR2=0x0000000000000000
00035248000i[CPU0 ] | CR3=0x00100000 CR4=0x00000000
00035248000i[CMOS ] Last time is 1673011157 (Fri Jan 06 21:19:17 2023)
00035248000i[CTRL ] quit_sim called with exit code 1
